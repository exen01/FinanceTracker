@page
@model IndexModel
@{
    ViewData["Title"] = "Домашняя страница";
}

<div class="row row-cols-3 g-4">
    <div class="col">
        <div class="card border-dark bg-light mb-3">
            <div class="row g-0">
                <div class="col-md-4 d-flex align-items-center justify-content-center">
                    <h1 class="display-1">
                        <i class="bi bi-cash-stack text-success"></i>
                    </h1>
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayNameFor(model => model.TotalIncome)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => modelItem.TotalIncome)</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card border-dark bg-light mb-3">
            <div class="row g-0">
                <div class="col-md-4 d-flex align-items-center justify-content-center">
                    <h1 class="display-1">
                        <i class="bi bi-cash-stack text-danger"></i>
                    </h1>
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayNameFor(model => model.TotalExpense)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => modelItem.TotalExpense)</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card border-dark bg-light mb-3">
            <div class="row g-0">
                <div class="col-md-4 d-flex align-items-center justify-content-center">
                    <h1 class="display-1">
                        <i class="bi bi-cash-stack text-primary"></i>
                    </h1>
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayNameFor(model => model.TotalBalance)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => modelItem.TotalBalance)</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card border-dark bg-light mb-3">
            <canvas id="expenseChart"></canvas>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var ctx = document.getElementById('expenseChart').getContext('2d');

        var categoryLabels = @Html.Raw(Json.Serialize(Model.CategoryExpenses.Keys.ToArray()));
        var categoryData = @Html.Raw(Json.Serialize(Model.CategoryExpenses.Values.ToArray()));

        var expenseChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: categoryLabels,
                datasets: [{
                    label: 'Расходы по категориям',
                    data: categoryData,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Расходы по категориям'
                    },
                    datalabels: {
                        formatter: (value, context) => {
                            return value; // Отображаем значение
                        },
                    }
                }
            },
            plugins: [ChartDataLabels] // Добавляем плагин
        });
    });
</script>